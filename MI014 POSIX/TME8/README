README


Noms et prénoms du binôme :
3103249 SUN Xin


Détail des fichiers inclus dans les répertoires include, lib et src
(pour chaque exercice, les fichiers qui lui sont associés) :


Ex1:
	src/miniServeur.c
	il y a 5 client, chaque client peut choisir 3 operation : 'UPLOAD' 'DOWNLOAD' 'LIST'
	Le serveur n'accepte que 1 client a chaque moment
	une fois que 1 client termine son operation, le client suivant peut fair son operation.
	
	example
	appler => serveur : ./ftpServer 7100 fSer
				client  : ./ftpClient 7100
	 
	fichier sortie : fSer => contient les donnees entree par chaque client.
	
	mode UPLOAD => 	serveur : wait ...
						client : operations 'UPLOAD' 'DOWNLOAD' 'LIST'
							'UPLOAD'
						serveur : reception demande de UPLOAD
						client : Vous pouver saisir le contenu vous voulez update, 'STOP' pour fin de UPLOAD
							'XXXXX'
						serveur : copier ...
						client : update avec succes
						continuer votre UPLOAD ou 'STOP' pour fin de UPLOAD
							'XXXXXXX'
						serveur : copier ...
						client : update avec succes
							continuer votre UPLOAD ou 'STOP' pour fin de UPLOAD
							'STOP'
						serveur : fin de UPLOAD
						client : Merci, fin d'operation
	mode DOWNLOAD => 	serveur : wait ...
						client : operations 'UPLOAD' 'DOWNLOAD' 'LIST'
							'DOWNLOAD'
						serveur : reception demande de DOWNLOAD
						client : vous allez DOWNLOAD le contenu du fichier par 128bits
							entrez 'CONTINUER' pour DOWNLOAD
							entrez 'STOP' pour arreter DOWNLOAD
							'CONTINUER'
						serveur : envoie ...
						client : reception 'XXXXX'
							entrez 'CONTINUER' pour DOWNLOAD
							entrez 'STOP' pour arreter DOWNLOAD
							'STOP'
						serveur : fin de DOWNLOAD
						client : Merci, fin d'operation
								ou bien il affiche 'Fin de fichier DOWMLOAD' si on a lu jusqu'a la fin du fichier
								         on s'arrete automatiquement.
						

Ex2:
	src/mychar.c
	src/severChar.c
	
	j'ai bien testé sur des differentes machines,ca bien marche
	
	a la cote Utilisateur :  ./mychat 225.0.0.10 8100 demande
							 demander participer la groupe de mulcast dont l'address 225.0.0.10, et la port 8100
							 avec pseudo 'demande'
							 puis s'il a reception de la reponse BIENVENU signefie on a bien dans la groupe chat
							 et afficher :
							 recu msg depuis la groupe chat : BIENVENU GROUP CHAT
	l la cote Serveur : ./serverChat 225.0.0.10 8100
						creer la groupe de mulcast dont l'address 225.0.0.10, et la port 8100
						puis attendre des utilisateur demandent participer
						une fois recu la demande, afficher :
						serveur : recu la demande participer la groupe chat avec pseudo 'demande' depuis 132.227.112.205
						puis envoyer 1 message de BIENVENU vers l'utilisateur

Ex3 :
	src/mySonar.c
	src/myPong.c
	
	a la cote Sonar : 
		soit afficher => Thread envoyer : Envoyer 'PING' broadcast ...
						 si aucune machine disponible
		soit afficher => Thread reception : Message recu de 132.227.112.205 est 'PONG'
						 si recu la msg 'PONG' depuis la machine dont l'address 132.227.112.205
	a la cote Pong : 
		soit afficher => wait ... 
						 en attente la msg 'PING' de serveur
		soit afficher => Message recu : PING
						 s'il a recu la msg 'PING' de serveur et renvoie la msg 'PONG' vers serveur
		
Ex4 :
	/src/connexCli.c
	/src/connexServ.c
